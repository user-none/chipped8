name: Pyinstaller packaging

on: [push]

env:
  PROD_NAME: chipped8

jobs:
  os_matrix:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        pip install .
        pip install pyinstaller

    - name: Setup entry point
      run: |
        cp pyinstaller/runner.py .

    - name: Package
      run: |
        if [ "$RUNNER_OS" == "macOS" ]; then
          pyinstaller --add-data "chipped8/gui/qml:chipped8/gui/qml" -n $PROD_NAME --windowed --icon pyinstaller/logo.icns runner.py
          hdiutil create -format UDZO -srcfolder dist/$PROD_NAME.app dist/$PROD_NAME.dmg
        elif [ "$RUNNER_OS" == "Linux" ]; then
          pyinstaller --add-data "chipped8/gui/qml:chipped8/gui/qml" -n $PROD_NAME --windowed runner.py
          cd dist
          tar -czf $PROD_NAME.tar.gz *
        elif [ "$RUNNER_OS" == "Windows" ]; then
            pyinstaller --add-data "chipped8/gui/qml:chipped8/gui/qml" -n $PROD_NAME --windowed --icon pyinstaller/logo.ico runner.py
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - name: Upload artifacts macOS
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: $PROD_NAME-${{ runner.os }}
        path: dist/*.dmg
    - name: Upload artifacts
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: $PROD_NAME-${{ runner.os }}
        path: dist/*.tar.gz
    - name: Upload artifacts
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: $PROD_NAME-${{ runner.os }}
        path: dist/*
